# this is the build file for project 
# it is autogenerated by the xmake build system.


# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(radical LANGUAGES C)
set(CMAKE_C_COMPILER "gcc")
set(CMAKE_CXX_COMPILER "g++")


# target
add_library(radical STATIC "")
set_target_properties(radical PROPERTIES OUTPUT_NAME "radical")
set_target_properties(radical PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
target_include_directories(radical PRIVATE
    include
)
if(MSVC)
    set_property(TARGET radical PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(radical PRIVATE
    src/fraction.c
    src/radical.c
)

# target
add_library(radical_shared SHARED "")
set_target_properties(radical_shared PROPERTIES OUTPUT_NAME "radical")
set_target_properties(radical_shared PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
set_target_properties(radical_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
target_include_directories(radical_shared PRIVATE
    include
)
if(MSVC)
    set_property(TARGET radical_shared PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(radical_shared PRIVATE
    src/fraction.c
    src/radical.c
)

# target
add_executable(sin-cos "")
set_target_properties(sin-cos PROPERTIES OUTPUT_NAME "sin-cos")
set_target_properties(sin-cos PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
add_dependencies(sin-cos radical)
target_include_directories(sin-cos PRIVATE
    include
)
if(MSVC)
    set_property(TARGET sin-cos PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(sin-cos PRIVATE
    radical
)
target_link_directories(sin-cos PRIVATE
    build/release
)
target_sources(sin-cos PRIVATE
    examples/sin-cos.c
)

# target
add_executable(xyline "")
set_target_properties(xyline PROPERTIES OUTPUT_NAME "xyline")
set_target_properties(xyline PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
add_dependencies(xyline radical)
target_include_directories(xyline PRIVATE
    include
)
if(MSVC)
    set_property(TARGET xyline PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(xyline PRIVATE
    radical
)
target_link_directories(xyline PRIVATE
    build/release
)
target_sources(xyline PRIVATE
    examples/xyline.c
)

# target
add_executable(eyyc "")
set_target_properties(eyyc PROPERTIES OUTPUT_NAME "eyyc")
set_target_properties(eyyc PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
add_dependencies(eyyc radical)
target_include_directories(eyyc PRIVATE
    include
)
if(MSVC)
    set_property(TARGET eyyc PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(eyyc PRIVATE
    radical
)
target_link_directories(eyyc PRIVATE
    build/release
)
target_sources(eyyc PRIVATE
    examples/eyyc.c
)

# target
add_executable(eyyc_new "")
set_target_properties(eyyc_new PROPERTIES OUTPUT_NAME "eyyc_new")
set_target_properties(eyyc_new PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/release")
add_dependencies(eyyc_new radical)
target_include_directories(eyyc_new PRIVATE
    include
)
if(MSVC)
    set_property(TARGET eyyc_new PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(eyyc_new PRIVATE
    radical
)
target_link_directories(eyyc_new PRIVATE
    build/release
)
target_sources(eyyc_new PRIVATE
    examples/eyyc_new.c
)
