# this is the build file for project 
# it is autogenerated by the xmake build system.
# modified by maxchen32


# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(radical LANGUAGES C)
set(CMAKE_C_COMPILER "gcc")
set(CMAKE_CXX_COMPILER "g++")

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release")
endif()
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall")
    message("Debug mode:${CMAKE_C_FLAGS_DEBUG}")
elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -Wall -s")
    message("Release mode:${CMAKE_C_FLAGS_RELEASE}")
endif()

# target
add_library(radical STATIC "")
set_target_properties(radical PROPERTIES OUTPUT_NAME "radical")
set_target_properties(radical PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}")
#set_target_properties(radical PROPERTIES LINK_FLAGS_RELEASE  "-s")
target_include_directories(radical PRIVATE
    include
)
target_link_libraries(radical PRIVATE
    m
)
set_target_properties(radical PROPERTIES PUBLIC_HEADER 
    "${CMAKE_SOURCE_DIR}/include/fraction.h;${CMAKE_SOURCE_DIR}/include/radical.h"
)
if(MSVC)
    set_property(TARGET radical PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(radical PRIVATE
    $<TARGET_OBJECTS:radical_shared>
)

# target
add_library(radical_shared SHARED "")
set_target_properties(radical_shared PROPERTIES OUTPUT_NAME "radical")
set_target_properties(radical_shared PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}")
set_target_properties(radical_shared PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}")
set_target_properties(radical_shared PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}")
#set_target_properties(radical_shared PROPERTIES LINK_FLAGS_RELEASE  "-s")
target_include_directories(radical_shared PRIVATE
    include
)
target_link_libraries(radical_shared PRIVATE
    m
)
set_target_properties(radical_shared PROPERTIES PUBLIC_HEADER 
    "${CMAKE_SOURCE_DIR}/include/fraction.h;${CMAKE_SOURCE_DIR}/include/radical.h"
)
if(MSVC)
    set_property(TARGET radical_shared PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(radical_shared PRIVATE
    src/fraction.c
    src/radical.c
)

set(tests "eyyc" "xyline" "sin-cos" "eyyc_new" "simple_vector_calcs")
foreach(_var ${tests})
	# target
	add_executable(${_var} "")
	set_target_properties(${_var} PROPERTIES OUTPUT_NAME "${_var}")
	set_target_properties(${_var} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/${CMAKE_BUILD_TYPE}")
	set_target_properties(${_var} PROPERTIES LINK_FLAGS_RELEASE  "-s")
	add_dependencies(${_var} radical)
	target_include_directories(${_var} PRIVATE
		include
	)
	if(MSVC)
		set_property(TARGET ${_var} PROPERTY
			MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
	endif()
	target_link_libraries(${_var} PRIVATE
		radical
	)
	target_link_directories(${_var} PRIVATE
		build/release
	)
	target_sources(${_var} PRIVATE
		examples/${_var}.c
	)
endforeach()

install(TARGETS radical radical_shared
        EXPORT radicalTargets
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib
        RUNTIME DESTINATION lib
        PUBLIC_HEADER DESTINATION include
)
